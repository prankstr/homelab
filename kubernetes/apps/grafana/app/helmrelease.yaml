apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 10m
  chart:
    spec:
      chart: grafana
      version: 10.1.2
      sourceRef:
        kind: HelmRepository
        name: grafana
      interval: 1h
  values:
    admin:
      existingSecret: grafana
      userKey: username
      passwordKey: password

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

    dashboards:
      default:
        argocd-operational:
          gnetId: 19993
          datasource: VictoriaMetrics
        argocd-applications:
          gnetId: 19974
          datasource: VictoriaMetrics

    envFromSecret: tibber

    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
      dashboards:
        enabled: true
        searchNamespace: ALL

    plugins:
      - yesoreyeram-infinity-datasource

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
      ingressClassName: nginx
      hosts:
        - grafana.${my_domain}
      tls:
        - secretName: grafana.${my_domain}-cert
          hosts:
            - grafana.${my_domain}

    resources:
      requests:
        cpu: 100m
        memory: 500Mi

    extraSecretMounts:
      - name: auth-generic-oauth-secret-mount
        secretName: grafana
        defaultMode: 0440
        mountPath: /etc/secrets/auth_generic_oauth
        readOnly: true

    grafana.ini:
      server:
        root_url: https://grafana.${my_domain}
      auth:
        signout_redirect_url: "https://auth.${my_domain}/application/o/grafana/end-session/"
        oauth_auto_login: true
        #https://github.com/grafana/grafana/issues/74154
        oauth_allow_insecure_email_lookup: true
      auth.generic_oauth:
        name: authentik
        enabled: true
        client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
        client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
        scopes: "openid profile email"
        auth_url: "https://auth.${my_domain}/application/o/authorize/"
        token_url: "https://auth.${my_domain}/application/o/token/"
        api_url: "https://auth.${my_domain}/application/o/userinfo/"
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups, 'authentik Admins') && 'Admin'
        email_attribute_path: contains(keys(@), 'email') && email || name
