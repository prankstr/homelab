fullnameOverride: "victoria-metrics-k8s-stack"
kubeEtcd:
  enabled: false
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
defaultRules:
  disabled:
    Watchdog: true
vmsingle:
  spec:
    retentionPeriod: "1" # month
    resources:
      requests:
        memory: "1.5Gi"
        cpu: "100m"
    storage:
      resources:
        requests:
          storage: 30Gi
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/proxy-body-size: 1g
    ingressClassName: nginx
    hosts:
      - metrics.{ MY_DOMAIN }
    tls:
      - secretName: metrics.{ MY_DOMAIN }-cert
        hosts:
          - metrics.{ MY_DOMAIN }
vmagent:
  spec:
    externalLabels:
      cluster: "molntuss-k8s"
    resources:
      limits:
        memory: "200Mi"
      requests:
        cpu: "200m"
        memory: "200Mi"
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
    ingressClassName: nginx
    hosts:
      - vmagent.{ MY_DOMAIN }
    tls:
      - secretName: vmagent.{ MY_DOMAIN }-cert
        hosts:
          - vmagent.{ MY_DOMAIN }
vmalert:
  spec:
    resources:
      limits:
        memory: "200Mi"
      requests:
        cpu: "100m"
        memory: "100Mi"
alertmanager:
  spec:
    configSecret: "alertmanager-config"
  templateFiles:
    telegram.yaml: |-
      {{ define "__alert_list" }}{{ range . }}

      <b>{{ .Labels.alertname }}</b>
      {{- if .Annotations.summary }}
      Summary: {{ .Annotations.summary }}
      {{ end }}
      {{- if .Annotations.description }}
      Description: {{ .Annotations.description }}
      {{ end }}
      Labels:
      {{ range .Labels.SortedPairs }}   <i>{{ .Name }}</i>: <code>{{ .Value }}</code>{{ end }}
      RunBook: {{ .Annotations.runbook }}
      {{ end }}
      ðŸ›  <a href="https://grafana.{ MY_DOMAIN }/">Grafana</a> ðŸ› 
      {{ end }}

      {{ define "telegram.message" }}
      {{ if gt (len .Alerts.Firing) 0 }}
      ðŸ”¥ Alerts Firing ðŸ”¥
      {{ template "__alert_list" .Alerts.Firing }}
      {{ end }}
      {{ if gt (len .Alerts.Resolved) 0 }}
      âœ… Alerts Resolved âœ…
      {{ template "__alert_list" .Alerts.Resolved }}
      {{ end }}
      {{ end }}
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
    ingressClassName: nginx
    hosts:
      - alertmanager.{ MY_DOMAIN }
    tls:
      - secretName: alertmanager.{ MY_DOMAIN }-cert
        hosts:
          - alertmanager.{ MY_DOMAIN }
grafana:
  enabled: false
  forceDeployDatasource: false
  sidecar:
    dashboards:
      label: "grafana_dashboard"
